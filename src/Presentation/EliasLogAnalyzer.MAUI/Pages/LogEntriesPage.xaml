<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewModels="clr-namespace:EliasLogAnalyzer.MAUI.ViewModels"
             xmlns:entities="clr-namespace:EliasLogAnalyzer.Domain.Entities;assembly=EliasLogAnalyzer.Domain"
             xmlns:converters="clr-namespace:EliasLogAnalyzer.MAUI.Converters"
             xmlns:ios="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific;assembly=Microsoft.Maui.Controls"
             x:DataType="viewModels:LogEntriesViewModel"
             x:Class="EliasLogAnalyzer.MAUI.Pages.LogEntriesPage">

    <ContentPage.MenuBarItems>
        <MenuBarItem Text="Filter">
            <MenuFlyoutSubItem Text="LogType">
                <MenuFlyoutItem Text="{Binding DebugLogTypeText}" Command="{Binding ChangeSelectedLogTypeCommand}" CommandParameter="{x:Static entities:LogType.Debug}" />
                <MenuFlyoutItem Text="{Binding InformationLogTypeText}" Command="{Binding ChangeSelectedLogTypeCommand}" CommandParameter="{x:Static entities:LogType.Information}" />
                <MenuFlyoutItem Text="{Binding WarningLogTypeText}" Command="{Binding ChangeSelectedLogTypeCommand}" CommandParameter="{x:Static entities:LogType.Warning}" />
                <MenuFlyoutItem Text="{Binding ErrorLogTypeText}" Command="{Binding ChangeSelectedLogTypeCommand}" CommandParameter="{x:Static entities:LogType.Error}" />
            </MenuFlyoutSubItem>
        </MenuBarItem>
    </ContentPage.MenuBarItems>

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:LogTypeToColorConverter x:Key="LogTypeToColorConverter" />
            <converters:BoolToPinTextConverter x:Key="BoolToPinTextConverter" />
            <converters:BoolToMarkedTextConverter x:Key="BoolToMarkedTextConverter" />
        </ResourceDictionary>
        
        <!-- Style to make selected element in a collectionView highlighted -->
        <Style TargetType="VerticalStackLayout">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Selected">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor"
                                        Value="LightGray" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <!-- Style to make the Grid responsive based off the amount selected LogEntries -->
        <Style TargetType="Grid" x:Key="ResponsiveGrid">
            <Style.Triggers>
                <DataTrigger TargetType="Grid" Binding="{Binding IsSecondLogEntrySelected}" Value="True">
                    <Setter Property="ColumnDefinitions">
                        <Setter.Value>
                            <ColumnDefinitionCollection>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </ColumnDefinitionCollection>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger TargetType="Grid" Binding="{Binding IsSecondLogEntrySelected}" Value="False">
                    <Setter Property="ColumnDefinitions">
                        <Setter.Value>
                            <ColumnDefinitionCollection>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="0" />
                            </ColumnDefinitionCollection>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger TargetType="Grid" Binding="{Binding IsThirdLogEntrySelected}" Value="True">
                    <Setter Property="ColumnDefinitions">
                        <Setter.Value>
                            <ColumnDefinitionCollection>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </ColumnDefinitionCollection>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </ContentPage.Resources>

    <ContentPage.Content>
        <Grid RowDefinitions="*, *">
            <Border Grid.Row="0" Margin="10" Padding="10" Stroke="LightGray">

                <Grid RowDefinitions="Auto,*">
                    
                    <SearchBar Grid.Row="0"
                               ios:SearchBar.SearchBarStyle="Minimal"
                               Placeholder="Search log entries..."
                               Text="{Binding SearchText, Mode=TwoWay}"
                               SearchCommand="{Binding RefreshFilterCommand}" />

                    <!-- CollectionView with Filtered LogEntries -->
                    <CollectionView Grid.Row="1" ItemsSource="{Binding FilteredLogEntries}"
                                    SelectionMode="Multiple"
                                    SelectedItems="{Binding SelectedLogEntries}"
                                    SelectionChangedCommand="{Binding SelectionChangedCommand}">

                        <CollectionView.EmptyView>
                            <ContentView>
                                <Label Text="No search results..." Margin="10, 50" FontAttributes="Italic" />
                            </ContentView>
                        </CollectionView.EmptyView>

                        <!-- Headers for the Filtered LogEntries-->
                        <CollectionView.Header>
                            <Grid
                                BackgroundColor="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource OffBlack}}"
                                Padding="10"
                                ColumnDefinitions="30, 30, *, *, *, *, *, *, *, *, *, *, *, *">
                                <Label Grid.Column="0" Text="⭐" />
                                <Label Grid.Column="1" Text="📌" />
                                <Label Grid.Column="2" Text="{Binding SortDateTimeHeaderText}" FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="DateTime" />
                                    </Label.GestureRecognizers>
                                </Label>
                                <Label Grid.Column="3" Text="Ticks" FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="DateTime" />
                                    </Label.GestureRecognizers>
                                </Label>
                                <Label Grid.Column="4" Text="SortValue" FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="DateTime" />
                                    </Label.GestureRecognizers>
                                </Label>
                                <Label Grid.Column="5" Text="{Binding SortLogTypeHeaderText}" FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="LogType" />
                                    </Label.GestureRecognizers>
                                </Label>
                                <Label Grid.Column="6" Text="{Binding SortThreadHeaderText}" FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="ThreadNameOrNumber" />
                                    </Label.GestureRecognizers>
                                </Label>
                                <Label Grid.Column="7" Text="{Binding SortSourceLocationHeaderText}"
                                       FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="SourceLocation" />
                                    </Label.GestureRecognizers>
                                </Label>
                                <Label Grid.Column="8" Text="{Binding SortSourceHeaderText}" FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="Source" />
                                    </Label.GestureRecognizers>
                                </Label>
                                <Label Grid.Column="9" Text="{Binding SortCategoryHeaderText}" FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="Category" />
                                    </Label.GestureRecognizers>
                                </Label>
                                <Label Grid.Column="10" Text="{Binding SortEventIdHeaderText}" FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="EventId" />
                                    </Label.GestureRecognizers>
                                </Label>
                                <Label Grid.Column="11" Text="{Binding SortUserHeaderText}" FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="User" />
                                    </Label.GestureRecognizers>
                                </Label>
                                <Label Grid.Column="12" Text="{Binding SortComputerHeaderText}" FontAttributes="Bold">
                                    <Label.GestureRecognizers>
                                        <TapGestureRecognizer Command="{Binding HeaderTappedCommand}"
                                                              CommandParameter="Computer" />
                                    </Label.GestureRecognizers>
                                </Label>
                            </Grid>
                        </CollectionView.Header>

                        <!-- ItemTemplate for the Filtered LogEntries -->
                        <CollectionView.ItemTemplate>
                            <DataTemplate x:DataType="entities:LogEntry">
                                <VerticalStackLayout>
                                    <Grid Padding="10" ColumnSpacing="10"
                                          BackgroundColor="{Binding LogType, Converter={StaticResource LogTypeToColorConverter}}"
                                          ColumnDefinitions="30, 30, *, *, *, *, *, *, *, *, *, *, *, *">
                                        <Label Grid.Column="0" Text="⭐" IsVisible="{Binding IsMarked}" />
                                        <Label Grid.Column="1" Text="📌" IsVisible="{Binding IsPinned}" />
                                        <Label Grid.Column="2" Text="{Binding LogTimeStamp.DateTime}" />
                                        <Label Grid.Column="3" Text="{Binding LogTimeStamp.Ticks}" />
                                        <Label Grid.Column="4" Text="{Binding LogTimeStamp.DateTimeSortValue}" />
                                        <Label Grid.Column="5" Text="{Binding LogType}" />
                                        <Label Grid.Column="6" Text="{Binding ThreadNameOrNumber}" />
                                        <Label Grid.Column="7" Text="{Binding SourceLocation}" />
                                        <Label Grid.Column="8" Text="{Binding Source}" />
                                        <Label Grid.Column="9" Text="{Binding Category}" />
                                        <Label Grid.Column="10" Text="{Binding EventId}" />
                                        <Label Grid.Column="11" Text="{Binding User}" />
                                        <Label Grid.Column="12" Text="{Binding Computer}" />
                                        <FlyoutBase.ContextFlyout>
                                            <MenuFlyout x:DataType="entities:LogEntry">
                                                <MenuFlyoutItem Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:LogEntriesViewModel}}, Path=PinLogEntryCommand}" CommandParameter="{Binding .}"
                                                                Text="{Binding IsPinned, Converter={StaticResource BoolToPinTextConverter}}" />
                                                <MenuFlyoutItem Command="{Binding Source={RelativeSource AncestorType={x:Type viewModels:LogEntriesViewModel}}, Path=MarkAsMainLogEntryCommand}" CommandParameter="{Binding .}"
                                                                Text="{Binding IsPinned, Converter={StaticResource BoolToMarkedTextConverter}}" />
                                            </MenuFlyout>
                                        </FlyoutBase.ContextFlyout>
                                    </Grid>
                                    <BoxView HeightRequest="1" BackgroundColor="Gray" />
                                </VerticalStackLayout>
                            </DataTemplate>
                        </CollectionView.ItemTemplate>
                    </CollectionView>
                </Grid>
            </Border>

            <!-- Bottom Half: StackLayout to display selected LogEntries Data -->
            <Border BackgroundColor="Transparent" Grid.Row="1" Margin="10" Padding="10" Stroke="LightGray">
                <Grid Style="{StaticResource ResponsiveGrid}">
                    <ScrollView Grid.Column="0" Orientation="Vertical">
                        <WebView HorizontalOptions="Fill"   VerticalOptions="Fill" >
                            <WebView.Source>
                                <HtmlWebViewSource Html="{Binding FirstDataHtml}" />
                            </WebView.Source>
                        </WebView>
                    </ScrollView>

                    <ScrollView Grid.Column="1" Orientation="Vertical" IsVisible="{Binding IsSecondLogEntrySelected}">
                        <WebView HorizontalOptions="Fill"   VerticalOptions="Fill" >
                            <WebView.Source>
                                <HtmlWebViewSource Html="{Binding SecondDataHtml}" />
                            </WebView.Source>
                        </WebView>
                    </ScrollView>

                    <ScrollView Grid.Column="2" Orientation="Vertical" IsVisible="{Binding IsThirdLogEntrySelected}">
                        <WebView HorizontalOptions="Fill"   VerticalOptions="Fill" >
                            <WebView.Source>
                                <HtmlWebViewSource Html="{Binding ThirdDataHtml}" />
                            </WebView.Source>
                        </WebView>
                    </ScrollView>
                </Grid>
            </Border>
        </Grid>
    </ContentPage.Content>
</ContentPage>